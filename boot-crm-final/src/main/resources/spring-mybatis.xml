<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--读取db.properties-->
    <context:property-placeholder location="classpath:db.properties" />
<!--    <context:property-placeholder location="classpath:db.properties" />-->
    <!--配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <!--数据库驱动-->
        <property name="driverClassName" value="${jdbc.driver}" />
        <!--数据库url-->
        <property name="url" value="${jdbc.url}" />
        <!--数据库用户名-->
        <property name="username" value="${jdbc.username}" />
        <!--数据库密码-->
        <property name="password" value="${jdbc.password}" />
        <!--最大连接数-->
        <property name="maxActive" value="${jdbc.maxTotal}" />
        <!--最大空闲连接数-->
        <property name="maxIdle" value="${jdbc.maxIdle}" />
        <!--初始化连接数-->
        <property name="initialSize" value="${jdbc.initialSize}" />
    </bean>
    <!--事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--数据源-->
        <property name="dataSource" ref="dataSource" />
    </bean>
<!--    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        <property name="dataSource" ref="dataSource"/>-->
<!--    </bean>-->
    <!--通知（对事务进行增强处理）-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--传播行为：指的是在同一个方法中，不同操作前后所使用的事务-->
        <!--传播行为可以控制是否需要创建事务以及如何创建事务-->
        <tx:attributes>
            <!--name指定对哪些方法起作用 propagation指定事务传播行为
            isolation指定事务隔离级别 read-only指定事务是否只读-->
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
        </tx:attributes>
    </tx:advice>
<!--    <tx:advice id="txAdvice1" transaction-manager="transactionManager">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="sdfds*" propagation="SUPPORTS"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->
    <!--切面-->
    <!--编写aop，让spring自动对目标生成代理-->
    <!--切面配置-->
    <aop:config>
        <!--aop:advisor用于配置通知器 advice-ref由于关联上面的tx:advice通知-->
        <!--pointcut设置切入点 execution()用于设置切入点表达式-->
        <!--execution(* com.lwz.core.service.*.*(..))就是匹配com.lwz.core.service包中的任意方法-->
        <!--括号中第一个*表示返回类型，*代表所有的类型-->
        <!--com.lwz.core.service代表要拦截的包名-->
        <!--第二个*表示类名，*代表所有的类 第三个*表示方法名，*表示所有的方法-->
        <!--...表示方法中的参数-->
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.lwz.core.service.*.*(..))" />
    </aop:config>
    <!--配置Mybatis工厂，将Spring和Mybatis整合在一起-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源-->
        <property name="dataSource" ref="dataSource" />
        <!--指定MyBatis核心配置文件位置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>
<!--    <bean class="org.mybatis.spring.SqlSessionFactoryBean">-->
<!--        <property name="dataSource" ref="dataSource" />-->
<!--        <property name="configLocation" value="classpath:mybatis-config.xml" />-->
<!--    </bean>-->
    <!--配置mapper扫描器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.lwz.core.dao" />
    </bean>
<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--        <property name="basePackage" value="com.lwz.core.dao" />-->
<!--    </bean>-->
    <!--扫描service-->
    <context:component-scan base-package="com.lwz.core.service" />
<!--    <context:component-scan base-package="com.lwz.core.service" />-->

</beans>